---
import { Link } from "./links";
import { gql, client } from "@/lib/client";

const currentPage = Astro.originPathname;

const navData = await client.query(
	gql`
		query get_nav {
			categories(where: { hideEmpty: true }) {
				nodes {
					name
					uri
				}
			}
		}
	`,
	{}
);

const categories = navData?.data?.categories?.nodes;

const allCategories = [{ name: "All", uri: "/" }, ...categories];
---

<script>
	const mobileMenu = document.getElementById("mobile-menu");
	const mainMenu = document.getElementById("main-menu");
	const closeMenu = document.getElementById("close-menu");

	closeMenu?.addEventListener("click", () => {
		mobileMenu?.setAttribute("data-closed", "true");
	});

	mainMenu?.addEventListener("click", () => {
		mobileMenu?.setAttribute("data-closed", "false");
	});
</script>
<div class="max-w-7xl mx-auto px-4 sm:px-6">
	<nav
		class="relative flex items-center justify-between sm:h-10 md:justify-center"
		aria-label="Global"
	>
		<div class="flex items-center flex-1 md:absolute md:inset-y-0 md:left-0">
			<div class="flex items-center justify-between w-full md:w-auto">
				<div class="-mr-2 flex items-center md:hidden">
					<button
						type="button"
						class="bg-gray-50 rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-hidden focus:ring-2 focus:ring-inset focus:ring-indigo-500"
						id="main-menu"
						aria-haspopup="true"
					>
						<span class="sr-only">Open main menu</span>
						{/* <!-- Heroicon name: menu --> */}
						<svg
							class="h-6 w-6"
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
							stroke="currentColor"
							aria-hidden="true"
						>
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M4 6h16M4 12h16M4 18h16"></path>
						</svg>
					</button>
				</div>
			</div>
		</div>
		<div class="hidden md:flex md:space-x-10">
			{
				allCategories?.map(({ name, uri }) =>
					currentPage !== uri ? (
						<Link key={uri} href={uri} role="menuitem">
							{name}
						</Link>
					) : null
				)
			}
		</div>
	</nav>
</div>
<div
	id="mobile-menu"
	class="data-[closed=true]:hidden absolute top-0 inset-x-0 p-2 transition origin-top-right md:hidden"
	data-closed="true"
>
	<div
		class="rounded-lg shadow-md bg-white ring-1 ring-black ring-opacity-5 overflow-hidden"
	>
		<div class="px-5 pt-4 flex items-center justify-between">
			<div class="mr-2">
				<button
					id="close-menu"
					type="button"
					class="bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-hidden focus:ring-2 focus:ring-inset focus:ring-indigo-500"
				>
					<span class="sr-only">Close menu</span>
					<svg
						class="h-6 w-6"
						xmlns="http://www.w3.org/2000/svg"
						fill="none"
						viewBox="0 0 24 24"
						stroke="currentColor"
						aria-hidden="true"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="2"
							d="M6 18L18 6M6 6l12 12"></path>
					</svg>
				</button>
			</div>
		</div>
		<div role="menu" aria-orientation="vertical" aria-labelledby="main-menu">
			{
				allCategories?.map(({ name, uri }) =>
					currentPage === uri ? null : (
						<div class="px-2 pt-2 pb-3" role="none">
							<Link
								href={uri}
								class="block px-3 py-2 hover:bg-gray-50"
								role="menuitem"
							>
								{name}
							</Link>
						</div>
					)
				)
			}
		</div>
	</div>
</div>
