---
import { gql } from "@urql/core";
import Link from "@/components/Link.astro";
import Time from "@/components/Time.astro";
import ReadingTime from "@/components/ReadingTime.astro";

export interface Props {
	posts: {
		title: string;
		excerpt: string;
		uri: string;
		dateGmt: string;
		categories: { nodes: { name: string; uri: string }[] };
		content: string;
		featuredImage: {
			node: {
				altText: string;
				srcSet: string;
				sourceUrl: string;
			};
		};
	}[];
}

export const PostArchiveFragment = gql`
	fragment PostExcerpt on Post {
		title
		excerpt
		content
		dateGmt
		uri
		featuredImage {
			node {
				altText
				srcSet
				sourceUrl
			}
		}
		categories {
			nodes {
				name
				uri
			}
		}
	}
`;

const { posts } = Astro.props;
---

<div class="relative pt-4 m:pt-16 pb-20 px-4 sm:px-6 lg:pt-24 lg:pb-28 lg:px-8">
	<div class="relative max-w-7xl mx-auto">
		<div
			class="mt-12 mx-auto grid gap-5 max-w-lg md:max-w-xl md:grid-cols-2 lg:grid-cols-3 lg:max-w-none"
		>
			{
				Array.isArray(posts) &&
					posts?.map((post) => {
						const {
							title,
							excerpt,
							uri,
							dateGmt,
							categories,
							content,
							featuredImage: { node: featuredImage },
						} = post;

						return (
							<div class="flex flex-col rounded-lg shadow-lg overflow-hidden">
								<div class="shrink-0">
									{featuredImage?.sourceUrl ? (
										<img
											class="h-48 w-full object-cover"
											src={featuredImage.sourceUrl}
											srcset={featuredImage.srcSet}
											loading="lazy"
											alt={featuredImage.altText}
										/>
									) : (
										<div class="h-48 bg-green-600" />
									)}
								</div>
								<div class="flex-1 bg-white p-6 flex flex-col justify-between">
									<div class="flex-1">
										<p class="text-sm font-medium text-indigo-600">
											{categories.nodes?.map(({ name, uri }) => (
												<Link
													key={uri}
													href={uri}
													class="hover:underline"
													override
												>
													{name}
												</Link>
											))}
										</p>
										<Link href={uri} class="block mt-4" override>
											<p class="text-xl font-semibold text-gray-900">{title}</p>
											<p class="mt-3 text-base text-gray-500">
												<div set:html={excerpt} />
											</p>
										</Link>
									</div>
									<div class="mt-6 flex items-center">
										<div class="">
											<div class="flex space-x-1 text-sm text-gray-500">
												<Time dateTime={dateGmt} />
												<span aria-hidden="true">&middot;</span>
												<span>
													<ReadingTime content={content} />
												</span>
											</div>
										</div>
									</div>
								</div>
							</div>
						);
					})
			}
		</div>
	</div>
</div>
